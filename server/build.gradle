ext {
	// logging
	slf4jVersion = '1.7.21'
	logbackVersion = '1.1.7'

	// spring libraries
	springVersion = '4.3.2.RELEASE'
	springBootVersion = '1.4.1.RELEASE'

	// common utility libraries
	embeddedMongoVersion = '1.50.5'
	jacksonVersion = '2.8.3'

	// test libraries
	junitVersion = '4.12'
}

buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'spring-boot'

jar {
	baseName = 'server'
	version = '1.0.0-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
}


dependencies {
	// Spring Boot utility libraries
	compile("org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion")
	/*compile("org.springframework.boot:spring-boot-starter-security:$springBootVersion")*/
	compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
	compile("org.springframework.boot:spring-boot-configuration-processor:$springBootVersion")

	// common utility libraries
	compile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:$embeddedMongoVersion")
	compile("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
	compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")

	// logging
	compile("org.slf4j:slf4j-api:$slf4jVersion")
	compile("ch.qos.logback:logback-core:$logbackVersion")

	// test libraries
	testCompile("junit:junit:$junitVersion")
	testCompile("org.springframework:spring-test:$springVersion")
	testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
}
